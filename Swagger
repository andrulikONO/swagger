openapi: 3.0.0
info:
  title: Книжный магазин "Литературный мир"
  version: 2.0.0
  description: Полнофункциональное API для управления книгами, авторами и заказами

paths:
  /books:
    get:
      tags: [Книги]
      summary: Поиск книг
      description: Фильтрация по жанру, наличию и другим параметрам
      parameters:
        - $ref: '#/components/parameters/genreFilter'
        - $ref: '#/components/parameters/inStockFilter'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: Отфильтрованный список книг
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookListResponse'


  /books/{bookId}:
    get:
      tags: [Книги]
      summary: Получить детальную информацию о книге
      parameters:
        - $ref: '#/components/parameters/bookIdPath'
      responses:
        '200':
          description: Детальная информация о книге
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetails'
    
    delete:
      tags: [Книги]
      summary: Удалить книгу
      parameters:
        - $ref: '#/components/parameters/bookIdPath'
      responses:
        '200':
          description: Книга успешно удалена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'

  /authors:
    get:
      tags: [Авторы]
      summary: Список авторов
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: Список авторов с пагинацией
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorListResponse'
    
    post:
      tags: [Авторы]
      summary: Добавить нового автора
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorInput'
      responses:
        '201':
          description: Автор успешно добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'

  /authors/{authorId}/books:
    get:
      tags: [Авторы]
      summary: Книги автора
      parameters:
        - $ref: '#/components/parameters/authorIdPath'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: Список книг автора
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookListResponse'


  /orders:
    post:
      tags: [Заказы]
      summary: Оформить заказ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '201':
          description: Заказ успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
          headers:
            Location:
              description: Ссылка на созданный заказ
              schema:
                type: string
    
    get:
      tags: [Заказы]
      summary: История заказов
      parameters:
        - $ref: '#/components/parameters/userIdQuery'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/pageSizeParam'
      responses:
        '200':
          description: Список заказов пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'


  /orders/check-status:
    get:
      tags: [Заказы]
      summary: Проверить статус заказа
      parameters:
        - $ref: '#/components/parameters/orderNumberQuery'
      responses:
        '200':
          description: Текущий статус заказа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatus'
        '404':
          description: Заказ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
